security:
    encoders:
        Torgovorot\TorgBundle\Entity\Users:
            algorithm: sha512
            encode-as-base64: true
            iterations: 10

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_MAIN:        ROLE_MAIN
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        users:
            entity: { class: TorgovorotTorgBundle:Users, property: email }
        #admins:
        #    entity: { class: TorgovorotTorgBundle:Users, property: email }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/login$
            anonymous:  ~
            security: false
            
        #admin:
        #    pattern:  ^/admin$
        #    anonymous:  ~
        #    security: false    

        secured_area:
            pattern:    ^/
            anonymous: ~
            form_login:
                provider: users
                check_path: /login_check
                login_path: /login
                always_use_default_target_path: true
                default_target_path: /account#profile
            logout:
                path:   /logout
                target: /
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
            
        #secured_admin:
        #    pattern:    ^/admin
        #    anonymous: ~
        #    form_login:
        #        provider: admins
        #        check_path: /admin/login_check
        #        login_path: /admin/login
        #    logout:
        #        path:   /admin/logout
        #        target: /admin/login
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
         - { path: /login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: /admin, roles: ROLE_MAIN }
